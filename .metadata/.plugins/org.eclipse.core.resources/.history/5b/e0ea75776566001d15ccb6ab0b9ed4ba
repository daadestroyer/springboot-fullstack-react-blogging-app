package com.daadestroyer.springbootfullstackreactbloggingapp.config;

import java.io.IOException;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.filter.OncePerRequestFilter;

import com.daadestroyer.springbootfullstackreactbloggingapp.service.impl.CustomUserDetailService;
import com.daadestroyer.springbootfullstackreactbloggingapp.util.JwtUtil;

import io.jsonwebtoken.ExpiredJwtException;
import io.jsonwebtoken.MalformedJwtException;

public class JwtAuthenticationFilter extends OncePerRequestFilter {

	@Autowired
	private JwtUtil jwtUtil;

	@Autowired
	private CustomUserDetailService customUserDetailsService;

	@Override
	protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
			throws ServletException, IOException {
		// TODO Auto-generated method stub

		String token = null;
		String userName = null;

		// 1. get token
		String requestToken = request.getHeader("Authorization");

		// Bearer 2323jknkj2n3
		System.out.println(requestToken);

		if (request != null && requestToken.startsWith("Bearer")) {
			token = requestToken.substring(7);
			try {
				userName = jwtUtil.extractUsername(token);
			} catch (IllegalArgumentException e) {
				System.out.println("Unable to get JWT Token");
			} catch (ExpiredJwtException e) {
				// TODO: handle exception
				System.out.println("Jwt has expired");
			} catch (MalformedJwtException e) {
				// TODO: handle exception
				System.out.println("Invalid Jwt");
			}
		} else {
			System.out.println("JWT Token doesn't begin with Bearer");
		}

	}

}
