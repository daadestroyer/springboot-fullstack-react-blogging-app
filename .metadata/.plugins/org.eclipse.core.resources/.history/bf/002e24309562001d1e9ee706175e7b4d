package com.daadestroyer.springbootfullstackreactbloggingapp.exception;

import java.util.HashMap;
import java.util.Map;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.FieldError;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;

import com.daadestroyer.springbootfullstackreactbloggingapp.helper.APIResponse;

@RestControllerAdvice
public class GlobalExceptionHandler {

	@ExceptionHandler(ResourceNotFoundException.class)
	public ResponseEntity<?> resourceNotFoundExceptionHandler(ResourceNotFoundException resourceNotFoundException) {
		String message = resourceNotFoundException.getMessage();
		APIResponse apiResponse = new APIResponse(message, "failed");
		return new ResponseEntity<>(apiResponse, HttpStatus.NOT_FOUND);
	}

	@ExceptionHandler(MethodArgumentNotValidException.class)
	public ResponseEntity<?> handleMethodArgumentNotValidException(
			MethodArgumentNotValidException methodArgumentNotValidException) {

		Map<String, String> resp = new HashMap<>();
		methodArgumentNotValidException.getAllErrors().forEach((error) -> {
			// getting all the field and then message
			
			String fieldName = ((FieldError) error).getField();
			String message = error.getDefaultMessage();
		});
		return new ResponseEntity<>(resp, HttpStatus.BAD_REQUEST);
	}

}
